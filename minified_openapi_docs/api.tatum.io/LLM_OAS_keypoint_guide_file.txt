Account a tatum account is the primary building block of tatumpowered applications it is an envelope that holds essential information about balances the state of the account or customer and to whom the account belongs
accounts in tatum are stored within tatum private ledger tatum private ledger contains information about accounts the customers that own the accounts transactions that affect the accounts or virtual currencies present in the ledger
by default the private ledger is not connected to any blockchain it is possible to create an application on it without any blockchain at all using tatum private ledger and the building blocks included within it it is possible to quickly swap the whole application from the ledger to any blockchain supported by tatum all of the api calls will remain the same the only thing that changes is the blockchain the application lives on
most blockchains do not have any compliance layer at all it is not possible to freeze funds at a blockchain address or deactivate an address the tatum account has builtin compliance and it is possible to block funds in the account freeze outgoing transactions from the account or even completely deactivate the account
createaccount-0!getaccounts-1!getaccountscount-2!createaccountbatch-3!getaccountsbycustomerid-4!getaccountbyaccountid-5!getaccountbalance-6!blockamount-7!deleteblockamount-8!getblockamount-9!getblockamountbyid-10!deleteallblockamount-11!
Algorand algorand is a decentralized blockchain technology network algorand is enabling the simple creation of next generation financial products protocols and exchange of value across defi financial institutions and governments
tatum supports 2 chains
mainnet  a regular live chain
testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//banktestnetalgorandnetwork/
examples of working with the algorand blockchain can be found in tatum algo sdk
algorandgeneratewallet-12!algorandgenerateaddress-13!algorandgetbalance-14!algorandgetcurrentblock-15!algorandgetblock-16!algorandblockchaintransfer-17!algorandblockchainreceiveasset-18!algorandgettransaction-19!algorandbroadcast-20!
Auction
generateauction-21!createauction-22!bidonauction-23!settleauction-24!cancelauction-25!approvenftauctionspending-26!getauction-27!getauctionfee-28!getauctionfeerecipient-29!
BNB Beacon Chain bnb beacon chain is a blockchain developed by binance with tatum you can access the most commonly used bnb beacon chain methods these methods bring a certain level of abstraction and are used for applications that communicate with the blockchain directly
bnb beacon chain does not provide the smart contract functionality
tatum supports the following bnb beacon chain networks

mainnet the primary public production blockchain
testnet a chain used for testing purposes the testnet cryptocurrency has no value and you can obtain it from a faucet for example get it from the bnb smart chain faucet and transfer it to your bnb beacon chain address using the binance wallet
bnbgeneratewallet-30!bnbgetcurrentblock-31!bnbgetblock-32!bnbgetaccount-33!bnbgettransaction-34!bnbgettxbyaccount-35!bnbblockchaintransfer-36!bnbbroadcast-37!
BNB Smart Chain binance smart chain is an ethereum evm 100 compatible blockchain and is very good for decentralized application dapp development within many possible verticals including defi nft gaming and many others
tatum supports 2 chains
mainnet  a regular live chain
testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//testnetbinanceorg/faucetsmart
bscgeneratewallet-38!bscgenerateaddress-39!bscgenerateaddressprivatekey-40!bscgetcurrentblock-41!bscgetblock-42!bscgetbalance-43!bscgettransaction-44!bscgettransactioncount-45!bscblockchaintransfer-46!bscblockchainsmartcontractinvocation-47!bscbroadcast-48!
Bitcoin bitcoin blockchain enables access to the most commonly used bitcoin methods these methods bring a small level of abstraction
and are used for applications that communicate with the blockchain directly some of the methods are used alongside tatum private ledger
to connect the blockchain and the private ledger like wallet generation or getting information about transactions
tatum supports 2 chains
mainnet  a regular live chain
testnet3  a chain used for testing purposes coins on the test chain have no value and can be obtained from a faucet eg https//testnetfaucetmempoolco/
btcgeneratewallet-49!btcgenerateaddress-50!btcgenerateaddressprivatekey-51!btcgetblockchaininfo-52!btcgetblockhash-53!btcgetblock-54!btcgetbalanceofaddress-55!btcgetbalanceofaddressbatch-56!btcgettxbyaddress-57!btctransferblockchain-58!btcgetrawtransaction-59!btcgetutxo-60!btcgetmempool-61!btcbroadcast-62!
Bitcoin Cash bitcoin cash blockchain enables access to the most commonly used bitcoin cash methods these methods bring a small level of abstraction
 and are used for applications that communicate with the blockchain directly some of the methods are used alongside tatum private ledger
 to connect the blockchain and the private ledger like wallet generation or getting information about transactions
tatum supports 2 chains
  mainnet  a regular live chain
  testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from a faucet eg https//faucetfullstackcash/
  
tatum supports bip44 hd wallets because they can generate 231 addresses from 1 mnemonic phrase they are very convenient and secure it is possible to generate this type of wallet with 1 simple api call
bchgeneratewallet-63!bchgetblockchaininfo-64!bchgetblockhash-65!bchgetblock-66!bchgetrawtransaction-67!bchgettxbyaddress-68!bchgenerateaddress-69!bchgenerateaddressprivatekey-70!bchtransferblockchain-71!bchbroadcast-72!
Blockchain addresses manage deposit addresses associated with your virtual account
depending on how virtual accounts are connected to the blockchain the virtual accounts can be

virtual accounts with associated deposit addresses
customers can send funds to and receive funds from other blockchain addresses
virtual accounts with no deposit addresses
these accounts have a cryptocurrency assigned but do not have any associated deposit addresses the customers can send funds to and receive funds from another virtual accounts and can send funds to blockchain addresses however the customers cannot receive funds from blockchain addresses
generatedepositaddress-73!getalldepositaddresses-74!generatedepositaddressesbatch-75!addressexists-76!assignaddress-77!removeaddress-78!
Blockchain fees
getblockchainfee-79!estimatefeeblockchain-80!bscestimategas-81!celoestimategas-82!egldestimategas-83!ethestimategas-84!ethestimategasbatch-85!oneestimategas-86!klaytnestimategas-87!kcsestimategas-88!polygonestimategas-89!xdcestimategas-90!vetestimategas-91!
Blockchain operations an endpoint to handle operations between a virtual account and the blockchain eg to create blockchain transactions from virtual accounts create custom fungible tokens and custom assets and register them as a regular currency into the virtual account
btctransfer-92!bchtransfer-93!ltctransfer-94!flowtransfer-95!dogetransfer-96!ethtransfer-97!polygontransfer-98!kcstransfer-99!ethtransfererc20-100!ethdeployerc20-101!bscorbeptransfer-102!bscdeploybep20-103!klaytransfer-104!klaydeployerc20-105!xdctransfer-106!xdcdeployerc20-107!onetransfer-108!onedeployhrm20-109!registererc20token-110!storetokenaddress-111!celoorerc20transfer-112!celodeployerc20ledger-113!kcsdeployerc20ledger-114!soltransfer-115!xlmtransfer-116!xlmassetoffchain-117!xrptransfer-118!xrpassetoffchain-119!bnbtransfer-120!bnbassetoffchain-121!adatransferoffchain-122!trontransferoffchain-123!createtrc-124!trondeploytrc-125!egldtransfer-126!algodeployerc20ledger-127!algotransfer-128!
Blockchain storage you can store data records on the blockchain a record is stored permanently it cannot be changed
deleted or modified by anyone and will be stored on the blockchain forever
storelog-129!getlog-130!
Blockchain utils the utility apis help you use some native blockchain features such as getting the address of a smart contract or estimating the block number
each utility api supports its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section
scgetcontractaddress-131!getauctionestimatedtime-132!
Cardano cardano is a decentralized opensource blockchain with tatum you can access the most commonly used cardano methods these methods bring a certain level of abstraction and are used for applications that communicate with the blockchain directly some of the methods are used alongside virtual accounts to connect the blockchain and a virtual account like generating a wallet or getting information about transactions
tatum supports cardano mainnet and cardano preproduction testnet
adagetblockchaininfo-133!adageneratewallet-134!adagenerateaddress-135!adagenerateaddressprivatekey-136!adagetblock-137!adagetrawtransaction-138!adagettxbyaddress-139!adagetutxobyaddress-140!adatransferblockchain-141!adabroadcast-142!adagetaccount-143!
Celo celo is fork of celo with more than 1000 tps and possibility to pay for
transactions in its own stable coin cusd celo blockchain enables access to most commonly used celo methods
these methods bring small level of abstraction
       and are used for the type of applications that want to communicate with blockchain directly some of the methods are used alongside tatum private ledger
       to connect blockchain and private ledger together like wallet generation or getting information about transactions
      tatum supports 2 chains
      mainnet  regular live chain
      alfajorec  test chain used for testing purposes coins on test chain have no value and can be obtained from
      faucet eg https//celoorg/developers/faucet
      tatum supports bip44 hd wallets it is very convenient and secure since it can generate 231 addresses from 1 mnemonic phrase it is possible to generate this type of wallet with 1 simple api call
celogeneratewallet-144!celogenerateaddress-145!celogenerateaddressprivatekey-146!celogetcurrentblock-147!celogetblock-148!celogetbalance-149!celogettransactionbyaddress-150!celogettransaction-151!celogettransactioncount-152!celoblockchaintransfer-153!celoblockchainsmartcontractinvocation-154!celobroadcast-155!
Custodial managed wallets custodial api is a set of operations which allows you to work with managed blockchain addresses without having its private key
you can easily create new managed address and export its details  with private key as well  once required
this features are currently in alpha version
custodialcreatewallet-156!custodialgetwallets-157!custodialgetwallet-158!custodialdeletewallet-159!custodialtransfermanagedaddress-160!
Customer an endpoint used to handle customer operations like updating customer information enabling/disabling etc
within tatum api a customer represents a client of the entity that communicates with tatum
customers cannot be created via any other operation than create ledger account
due to compliance restrictions it is recommended to enter the country of residence of the customer and the country of the provider the tatum compliance engine operates based on this information
findallcustomers-161!getcustomerbyexternalorinternalid-162!
Data API tatum data api is a comprehensive solution designed for developers to easily access onchain data such as token balances nft owners and metadata all through a suite of userfriendly apis
with tatum data api developers can seamlessly integrate blockchain functionality into their applications enabling them to deliver innovative web3 solutions this powerful indexing solution supports multiple blockchains ensuring developers have access to the latest data across different networks
tatum data api offers a reliable scalable and costeffective way for developers to access onchain data making it an essential tool for any blockchain project
getcollections-163!getmetadata-164!getbalances-165!getowners-166!checkowner-167!gettransactions-168!gettransactionsbyhash-169!getevents-170!getblocks-171!getlatestblock-172!gettokens-173!getutxosbyaddress-174!
Deposit
getdeposits-175!getdepositscount-176!
Dogecoin dogecoin blockchain enables access to the most commonly used dogecoin methods these methods bring a small level of abstraction
 and are used for applications that communicate with the blockchain directly some of the methods are used alongside tatum private ledger
 to connect the blockchain and the private ledger like wallet generation or getting information about transactions
tatum supports 2 chains
  mainnet  a regular live chain
  testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from a faucet eg https//testnetfaucetcom/dogetestnet/
tatum supports bip44 hd wallets because they can generate 231 addresses from 1 mnemonic phrase they are very convenient and secure it is possible to generate this type of wallet with 1 simple api call
dogegeneratewallet-177!dogegenerateaddress-178!dogegenerateaddressprivatekey-179!dogegetblockchaininfo-180!dogegetblockhash-181!dogegetblock-182!dogegetrawtransaction-183!dogegettxbyaddress-184!dogegetbalanceofaddress-185!dogegetbalanceofaddressbatch-186!dogegetmempool-187!dogegetutxo-188!dogetransferblockchain-189!dogebroadcast-190!
Elrond elrond egld is a distributed transactional computation protocol which relies on a sharded state architecture and a secure proof of stake consensus mechanism

tatum supports 2 chains
mainnet  a regular live chain
devnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//r3d4fr/elrond/devnet/
egldgeneratewallet-191!egldgenerateaddress-192!egldgenerateaddressprivatekey-193!egldgetcurrentblock-194!egldgetblock-195!egldgetbalance-196!egldgettransaction-197!egldgettransactionaddress-198!egldgettransactioncount-199!egldblockchaintransfer-200!egldbroadcast-201!
Ethereum ethereum is a decentralized opensource blockchain with tatum you can access the most commonly used ethereum methods these methods bring a certain level of abstraction and are used for applications that communicate with the blockchain directly some of the methods are used alongside virtual accounts to connect the blockchain and a virtual account like generating a wallet or getting information about transactions
tatum supports the following ethereum networks

mainnet the primary public production blockchain
sepolia a proofofwork testnet and the default testnet for ethereum the testnet cryptocurrency has no value and you can obtain it from a faucet for example fauceth
ethgeneratewallet-202!ethgenerateaddress-203!ethgenerateaddressprivatekey-204!ethgetcurrentblock-205!ethgetblock-206!ethgetbalance-207!ethgettransaction-208!ethgettransactioncount-209!ethgettransactionbyaddress-210!ethblockchaintransfer-211!ethblockchainsmartcontractinvocation-212!ethgetinternaltransactionbyaddress-213!ethbroadcast-214!
Exchange rate
getexchangerate-215!getexchangerates-216!
Flow flow blockchain enables access to the most commonly used flow methods these methods bring a small level of abstraction
 and are used for applications that communicate with the blockchain directly some of the methods are used alongside tatum private ledger
 to connect the blockchain and the private ledger like wallet generation or getting information about transactions
tatum supports flow and fusd stable coin
tatum supports 2 chains
  mainnet  a regular live chain
  testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from a faucet eg https//testnetfaucetonfloworg/
to obtain fusd on testnet you can swap them using https//swaptestnetbloctoapp/#/swap
to create accounts or mint nfts on mainnet you have to have paid api key tatum covers the transaction fees on flow blockchain out of the box so mainnet operations are available only on the paid api key
tatum handles automatically proposal key management  we internally rotate the proposal keys for you so you dont have to take care of that and can easily scale your transaction throughput
tatum supports bip44 hd wallets because they can generate 231 addresses from 1 mnemonic phrase they are very convenient and secure it is possible to generate this type of wallet with 1 simple api call
its not possible to pregenerate addresses on the flow blockchain you can generate only public keys which are used to generate address using a create account transaction to the flow blockchain
you have to have existing account on the flow to initialize new address creation transactions on the flow blockchain are free
flowgeneratewallet-217!flowgenerateaddress-218!flowgeneratepubkey-219!flowgeneratepubkeyprivatekey-220!flowgetblockchaininfo-221!flowgetblock-222!flowgetblockevents-223!flowgetrawtransaction-224!flowgetaccount-225!flowtransferblockchain-226!flowtransfercustomblockchain-227!flowcreateaddressfrompubkey-228!
Fungible Tokens (ERC-20 or compatible) fungible tokens are interchangeable and are used as a blockchain representation of the currency fungible tokens are described by the erc20 standard on the ethereum blockchain or by the equivalent standard on the other blockchains
each api related to fungible tokens supports its own set of the blockchains the list of the supported blockchains is provided in the operation description further in this section
erc20deploy-229!erc20mint-230!erc20burn-231!erc20approve-232!erc20transfer-233!erc20gettransactionbyaddress-234!erc20getbalance-235!erc20getbalanceaddress-236!
Gas pump the gas pump is tatums feature that helps you manage gas fees in a custodial application when you use the gas pump gas fees for any transaction made by your customers users of your custodial application are automatically deducted from the master address instead of the customers address this eliminates the need to send crypto to each customers address to pay for gas fees
for more information about the gas pump see our user documentation
each api related to the gas pump supports its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section
precalculategaspumpaddresses-237!activategaspumpaddresses-238!activatednotactivatedgaspumpaddresses-239!gaspumpaddressesactivatedornot-240!transfercustodialwallet-241!transfercustodialwalletbatch-242!approvetransfercustodialwallet-243!
Harmony harmonyone is an oneeum l2 scaling solution 100 evm compatible and is very good for decentralized application dapp development within many possible verticals including defi nft gaming and many others
tatum supports 2 chains
mainnet  a regular live chain
testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//faucetpopsone/
onegeneratewallet-244!onegenerateaddress-245!oneformataddress-246!onegenerateaddressprivatekey-247!onegetcurrentblock-248!onegetblock-249!onegetbalance-250!onegettransaction-251!onegettransactioncount-252!oneblockchaintransfer-253!oneblockchainsmartcontractinvocation-254!onebroadcast-255!
IPFS ipfs is a distributed file storage you can store data to ipfs and read from them
getipfsdata-256!storeipfs-257!
Key Management System key management system kms is a comprehensive solution for building custodial applications kms runs locally on your server and provides security for generating wallets addresses and private keys and for signing transactions
kms builds a list of pending transaction to sign and provides the options to complete a transaction after it has been signed and to obtain transaction details with the result of the blockchain operation via the transaction id
in kms each managed wallet or private key is assigned a unique signature id signatureid that represents that wallet or private key this signature id is then used in an api request to identify the wallet
depending on the api you can use the signature id in an api call request in the following ways


to represent the mnemonic type of the wallet for example in the api for sending btc from a virtual account to the blockchain see the transferbtckms request schema
to represent the privatekey type of the wallet for example in the api for sending btc to a blockchain address see the btctransactionfromutxokms request schema
to represent the mnemonic and index type of the wallet for example in the api for sending eth from a virtual account to the blockchain see the transferethkms request schemain this case the index of the specific private key generated from the mnemonic must be used in addition to the signature id

you can run kms on the following operating systems

macos natively or via docker
unix natively or via docker
ms windows only via docker

for more information about kms see the kms github repository and the user documentation
getpendingtransactionstosign-258!receivependingtransactionstosign-259!getpendingtransactiontosign-260!deletependingtransactiontosign-261!
Klaytn klaytn is an ethereum evm 100 compatible blockchain and is very good for decentralized application dapp development within many possible verticals including defi nft gaming and many others
tatum supports 2 chains
mainnet  a regular live chain
baobab testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//baobabwalletklaytncom/accessnextfaucet
klaytngeneratewallet-262!klaytngenerateaddress-263!klaytngenerateaddressprivatekey-264!klaytngetcurrentblock-265!klaytngetblock-266!klaytngetbalance-267!klaytngettransaction-268!klaytngettransactioncount-269!klaytnblockchaintransfer-270!klaytnblockchainsmartcontractinvocation-271!klaytnbroadcast-272!
KuCoin kcs kcs is an ethereum evm 100 compatible blockchain and is very good for decentralized application dapp development within many possible verticals including defi nft gaming and many others
tatum supports 2 chains
mainnet  a regular live chain
mumbai testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//faucettestnetkccnetwork/
kcsgeneratewallet-273!kcsgenerateaddress-274!kcsgenerateaddressprivatekey-275!kcsgetcurrentblock-276!kcsgetblock-277!kcsgetbalance-278!kcsgettransaction-279!kcsgettransactioncount-280!kcsblockchaintransfer-281!kcsblockchainsmartcontractinvocation-282!kcsbroadcast-283!
Litecoin litecoin blockchain enables access to the most commonly used litecoin methods these methods bring a small level of abstraction and are used for applications that communicate with the blockchain directly some of the methods are used alongside tatum private ledger
 to connect the blockchain and the private ledger like wallet generation or getting information about transactions
examples of working with the litecoin blockchain can be found in tatum ltc sdk
tatum supports 2 chains
  mainnet  a regular live chain
  testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from a faucet eg http//testnetlitecointoolscom/
tatum supports bip44 hd wallets because they can generate 231 addresses from 1 mnemonic phrase they are very convenient and secure it is possible to generate this type of wallet with 1 simple api call
ltcgeneratewallet-284!ltcgetblockchaininfo-285!ltcgetblockhash-286!ltcgetblock-287!ltcgetrawtransaction-288!ltcgetmempool-289!ltcgettxbyaddress-290!ltcgetbalanceofaddress-291!ltcgetbalanceofaddressbatch-292!ltcgetutxo-293!ltcgenerateaddress-294!ltcgenerateaddressprivatekey-295!ltctransferblockchain-296!ltcbroadcast-297!
Malicious address an endpoint to check if the blockchain address is safe to work with or not
checkmalicousaddress-298!
Marketplace build a peertopeer nft marketplace and allow your customers to sell and buy assets when an asset is sold the creator is automatically paid the asset is instantly transferred to the buyer and you as the owner of the marketplace automatically receive a percentage of the transaction
each marketplacerelated api supports its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section
generatemarketplace-299!sellassetonmarketplace-300!buyassetonmarketplace-301!cancelsellmarketplacelisting-302!getmarketplacelistings-303!getmarketplacelisting-304!getmarketplaceinfo-305!getmarketplacefee-306!getmarketplacefeerecipient-307!withdrawfeefrommarketplace-308!withdrawtreasuryfrommarketplace-309!
Multi Tokens (ERC-1155 or compatible) a multi token combines characteristics of fungible and nonfungible tokens a single multi token smart contract allows you to mint fungible nonfungible and semifungible tokens and process different types of the tokens in a single transaction multi tokens are described by the erc1155 standard on the ethereum blockchain or by the equivalent standard on the other blockchains
multi tokens can be used for nearly any digital asset or good to ensure authenticity and scarcity for example

ingame assets multi tokens can be used to create unique collectibles in the form of characters weapons skins or other equipment players can resell or trade assets directly as they choose and their authenticity is easily verifiable
music and other digital media multi tokens can be used to create rare and unique collectible digital releases similarly multi tokens can be used to sell videos art or any other type of digital media collectors can own digital originals of their favorite songs movies and so on
digital sports merchandise trading cards memorabilia classic moments in sports history and oneofakind experiences can be sold as multi tokens

each multi tokenrelated api supports its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section
deploymultitoken-310!mintmultitoken-311!mintmultitokenbatch-312!burnmultitoken-313!burnmultitokenbatch-314!transfermultitoken-315!transfermultitokenbatch-316!addmultitokenminter-317!multitokengettransactionbyaddress-318!multitokengettransaction-319!multitokengetaddressbalance-320!multitokengetbalance-321!multitokengetbalancebatch-322!multitokengetmetadata-323!
NFT (ERC-721 or compatible) nft stands for nonfungible token which means that each token is unique and irreplaceable nfts are described by the erc721 standard on the ethereum blockchain or by the equivalent standard on the other blockchains
nfts can be used for nearly any digital asset or good to ensure authenticity and scarcity for example

ingame assets nfts can be used to create unique collectibles in the form of characters weapons skins or other equipment players can resell or trade assets directly as they choose and their authenticity is easily verifiable
music and other digital media nfts can be used to create rare and unique collectible digital releases similarly nfts can be used to sell videos art or any other type of digital media collectors can own digital originals of their favorite songs movies and so on
digital sports merchandise trading cards memorabilia classic moments in sports history and oneofakind experiences can be sold as nfts

each nftrelated api its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section
nftdeployerc721-324!nftaddminter-325!nftminterc721-326!nfttransfererc721-327!nftmintmultipleerc721-328!nftburnerc721-329!nftverifyincollection-330!nftgettransactionbyaddress-331!nftgettransactionbytoken-332!nftgettransacterc721-333!nftgettokensbyaddresserc721-334!nftgettokensbycollectionerc721-335!nftgetbalanceerc721-336!nftgetmetadataerc721-337!
Node RPC interact with the blockchain directly by connecting to the blockchain node and communicating with it through jsonrpc
each noderelated api supports its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section
nodejsonpostrpcdriver-338!nodejsonrpcgetdriver-339!
Notification subscriptions endpoints to handle subscriptions to the tatum platform subscriptions allow users to enable some additional features or reports that are not enabled by default
like outgoing offchain transaction scanning accounts with balances above the limit etc
createsubscription-340!getsubscriptions-341!disablewebhookhmac-342!getsubscriptionscount-343!deletesubscription-344!getsubscriptionreport-345!getallwebhooks-346!getallwebhookscount-347!
Order Book endpoint to handle order book operations like creating bid / ask trades between tatum private virtual accounts obtaining trade histories creating futures etc it is possible to build an exchange based on the ledger accounts
storetrade-348!chartrequest-349!gethistoricaltradesbody-350!getbuytradesbody-351!getselltradesbody-352!getmatchedtrades-353!gettradebyid-354!deletetrade-355!deleteaccounttrades-356!
Polygon polygon matic is an ethereum evm 100 compatible blockchain and is very good for decentralized application dapp development within many possible verticals including defi nft gaming and many others
tatum supports 2 chains
mainnet  a regular live chain
mumbai testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//faucetmaticnetwork/
polygongeneratewallet-357!polygongenerateaddress-358!polygongenerateaddressprivatekey-359!polygongetcurrentblock-360!polygongetblock-361!polygongetbalance-362!polygongettransaction-363!polygongettransactionbyaddress-364!polygongettransactioncount-365!polygonblockchaintransfer-366!polygonblockchainsmartcontractinvocation-367!polygonbroadcast-368!
Service utils
getcredits-369!getversion-370!unfreezeapikey-371!
Solana solana is a blockchain network focused on fast transactions and high throughput it uses a unique method of ordering transactions to improve its speed users can pay their transaction fees and interact with smart contracts with sol the networks native cryptocurrency
for now solana is in beta and there is a rate limitation applied for all projects for solana to 40 req/s on the platform
tatum supports 2 chains
mainnet beta  a regular live chain
devnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//solfaucetcom/
solanageneratewallet-372!solanagetcurrentblock-373!solanagetblock-374!solanagetbalance-375!solanagettransaction-376!solanablockchaintransfer-377!solanabroadcastconfirm-378!
Stellar xlm blockchain enables access to the most commonly used xlm methods these methods bring a small level of abstraction
and are used for applications that communicate with the blockchain directly some of the methods are used alongside tatum private ledger
to connect the blockchain and the private ledger like wallet generation or getting information about transactions
examples of working with the stellar blockchain can be found in tatum xlm sdk
tatum supports 2 chains
 mainnet  a regular live chain
testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from a faucet eg https//friendbotstellarorg/addraddress
in order to start using the xlm blockchain we first need to create an xlm account in order to have the account activated it must be credited with 05 xlm  because of this requirement it is common to use one account for all customers and differentiate them using a memo  a short text/number included in every transaction as an account distinguisher
when an offchain deposit address is created for the ledger account a memo is generated eg 12345 for that account when a transaction to the blockchain is performed it should contain the address of the recipient and the memo as an account distinguisher
xlmwallet-379!xlmgetlastclosedledger-380!xlmgetledger-381!xlmgetledgertx-382!xlmgetfee-383!xlmgetaccounttx-384!xlmgettransaction-385!xlmgetaccountinfo-386!xlmtransferblockchain-387!xlmtrustlineblockchain-388!xlmbroadcast-389!
Transaction an endpoint used to create and list transactions within tatum private ledger a transaction is performed between 2 accounts with the same currency to perform an exchange operation between accounts with different currencies api calls from order book sections are available transactions in the ledger are instant with a settlement time of below 200ms
tatum private ledger supports microtransactions  a transaction of an amount as little as 1e30 30 decimal places transactions are atomic
when there is an insufficient balance in the sender account or recipient account cannot receive funds the transaction is not settled
sendtransaction-390!sendtransactionbatch-391!gettransactionsbyaccountid-392!gettransactionsbycustomerid-393!gettransactions-394!gettransactionsbyreference-395!
Tron tron blockchain enables access to most commonly used tron methods its possible to generate tron account send trx trc10 and trc20 assets its also possible to generate custom trc10 or trc20 tokens using api
tatum supports 2 chains
mainnet  regular live chain
shasta testnet  test chain used for testing purposes coins on test chain have no value and can be obtained from
faucet eg https//wwwtrongridio/shasta/
generatetronwallet-396!trongenerateaddress-397!trongenerateaddressprivatekey-398!trongetcurrentblock-399!trongetblock-400!trongetaccount-401!tronfreeze-402!tronunfreeze-403!tronaccounttx-404!tronaccounttx20-405!trontransfer-406!trontransfertrc10-407!trontransfertrc20-408!troncreatetrc10-409!trontrc10detail-410!troncreatetrc20-411!trongettransaction-412!tronbroadcast-413!
VeChain vechain blockchain enables access to the most commonly used vechain methods tatum does not support offchain capabilities for the vet blockchain
tatum kms is not supported for vet transactions vet supports 2 native assets  vet and vtho vtho is used for paying transaction fees

tatum supports 2 chains
mainnet  a regular live chain
testnet  a test chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//faucetvechain/
tatum supports bip44 hd wallets because they can generate 231 addresses from 1 mnemonic phrase they are very convenient and secure it is possible to generate this type of wallet with 1 simple api call
vetgeneratewallet-414!vetgenerateaddress-415!vetgenerateaddressprivatekey-416!vetgetcurrentblock-417!vetgetblock-418!vetgetbalance-419!vetgetenergy-420!vetgettransaction-421!vetgettransactionreceipt-422!vetblockchaintransfer-423!vetbroadcast-424!
Virtual Currency register and use tatum private ledgers virtual currencies you can create your own virtual currency and distribute it amongst your customers
virtual currencies are used to support fiat currencies when a virtual currency is created with basepair of the fiat currency it is possible to perform transactions in the private ledger in fiat
createcurrency-425!getcurrency-426!
Virtual account blockchain fees
offchainestimatefee-427!
Withdrawal
storewithdrawal-428!getwithdrawals-429!cancelinprogresswithdrawal-430!broadcastblockchaintransaction-431!
XRP xrpl is a decentralized public blockchain with tatum you can access the most commonly used xrpl methods these methods bring a certain level of abstraction and are used for applications that communicate with the blockchain directly some of the methods are used alongside virtual accounts to connect the blockchain and a virtual account like generating a wallet or getting information about transactions
tatum supports the following xrpl networks

mainnet the primary public production blockchain
testnet a mainnetlike network for testing applications on xrpl the testnet cryptocurrency has no value and you can obtain it from a faucet for example xrp faucets

to start using the xrpl blockchain create an xrpl account on xrpl the same account is used for the mainnet and the testnet to activate the account credit it with 20 xrp
because of the activation requirement it is common to use one account for all customers and differentiate them via destination tags a destination tag is a number included in every transaction as an account distinguisher
when an offchain deposit address is created for a virtual account a destination tag is generated for that account for example 12345 when you make a transaction to the blockchain be sure to include the address of the recipient and the destination tag as an account distinguisher examples of working with the xrp blockchain can be found in tatum xrp sdk
xrpwallet-432!xrpgetlastclosedledger-433!xrpgetfee-434!xrpgetaccounttx-435!xrpgetledger-436!xrpgettransaction-437!xrpgetaccountinfo-438!xrpgetaccountbalance-439!xrptransferblockchain-440!xrptrustlineblockchain-441!xrpaccountsettings-442!xrpbroadcast-443!
XinFin xdc network xinfin is enterprise ready hybrid blockchain for global trade and finance combining the power of public  private blockchains with interoperable smart contracts

tatum supports 2 chains
mainnet  a regular live chain
testnet  a chain used for testing purposes coins on the test chain have no value and can be obtained from
a faucet eg https//apothemnetwork/#gettestxdc
xdcgeneratewallet-444!xdcgenerateaddress-445!xdcgenerateaddressprivatekey-446!xdcgetcurrentblock-447!xdcgetblock-448!xdcgetbalance-449!xdcgettransaction-450!xdcgettransactioncount-451!xdcblockchaintransfer-452!xdcblockchainsmartcontractinvocation-453!xdcbroadcast-454!
